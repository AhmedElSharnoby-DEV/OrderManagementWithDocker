// <auto-generated />
using System;
using IOrderManagementSystem.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IOrderManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "This category related to foods",
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "This category related to electronics",
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "This category related to clothes",
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "This category related to medicals",
                            Name = "Category 4"
                        });
                });

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCustomerNotified")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("StockQuantity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            Description = "Product 1 description",
                            Name = "Product 1",
                            Price = 12m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            Description = "Product 2 description",
                            Name = "Product 2",
                            Price = 13m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 1L,
                            Description = "Product 3 description",
                            Name = "Product 3",
                            Price = 14m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 2L,
                            Description = "Product 4 description",
                            Name = "Product 4",
                            Price = 15m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 2L,
                            Description = "Product 5 description",
                            Name = "Product 5",
                            Price = 16m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 2L,
                            Description = "Product 6 description",
                            Name = "Product 6",
                            Price = 17m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 3L,
                            Description = "Product 7 description",
                            Name = "Product 7",
                            Price = 18m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 3L,
                            Description = "Product 8 description",
                            Name = "Product 8",
                            Price = 19m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 3L,
                            Description = "Product 9 description",
                            Name = "Product 9",
                            Price = 20m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 4L,
                            Description = "Product 10 description",
                            Name = "Product 10",
                            Price = 21m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 11L,
                            CategoryId = 4L,
                            Description = "Product 11 description",
                            Name = "Product 11",
                            Price = 22m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 12L,
                            CategoryId = 4L,
                            Description = "Product 12 description",
                            Name = "Product 12",
                            Price = 23m,
                            StockQuantity = 100L
                        },
                        new
                        {
                            Id = 13L,
                            CategoryId = 4L,
                            Description = "Product 13 description",
                            Name = "Product 13",
                            Price = 24m,
                            StockQuantity = 100L
                        });
                });

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.ProductOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrders");
                });

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.Order", b =>
                {
                    b.HasOne("IOrderManagementSystem.Domain.Models.Product", null)
                        .WithMany("Order")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.Product", b =>
                {
                    b.HasOne("IOrderManagementSystem.Domain.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.ProductOrder", b =>
                {
                    b.HasOne("IOrderManagementSystem.Domain.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IOrderManagementSystem.Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("IOrderManagementSystem.Domain.Models.Product", b =>
                {
                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
